name: Test on PR

on: [pull_request]

jobs:
  test-tauri:
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: 🧩 Setup dependencies (linux)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update -y
          sudo apt update -y
          sudo apt-get install -y libwebkit2gtk-4.0-dev \
                  build-essential \
                  curl \
                  wget \
                  file \
                  libssl-dev \
                  libgtk-3-dev \
                  libayatana-appindicator3-dev \
                  librsvg2-dev

      - name: 🗄️ Setup Rust cache
        uses: actions/cache@v2
        with:
          key: ${{ matrix.platform }}-${{ hashFiles('src-tauri/Cargo.lock') }}
          path: |
              ~/.cargo/registry/index
              ~/.cargo/registry/cache
              ~/.cargo/git
              ./src-tauri/target

      - name: 🍃 Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18
          cache: yarn
          cache-dependency-path: |
            yarn.lock

      - name: 🦀 Install Rust
        uses: actions-rs/toolchain@v1
        with: { toolchain: stable }

      - name: 🔌 Install Node.js frontend dependencies
        run: |
          yarn config set network-timeout 300000
          yarn install

      - name: 🧪 Test application (linux)
        if: matrix.os == 'ubuntu-latest'
        continue-on-error: true
        run: |
          xvfb-run yarn test

      - name: 🧪 Test application (non-linux)
        if: matrix.os != 'ubuntu-latest'
        continue-on-error: true
        run: |
          yarn test